/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.io.File;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.BitstreamException;
import javazoom.jl.decoder.DecoderException;
import javazoom.jl.decoder.JavaLayerException;
import musicplayer.Biblioteca;
import musicplayer.EnumEstado;
import musicplayer.Musica;
import musicplayer.PlayerPausavel;

/**
 *
 * @author bruno.191196
 */
public class Interface extends javax.swing.JFrame {

  /**
   * Creates new form Interface
   */
  public Interface() {
    initComponents();
    this.biblio = new Biblioteca();
    this.biblio.setPlaylistAtual(biblio.getTodasAsMusicas());
    this.exibePlaylist(biblio.getPlaylistAtual());
    this.pesquisarPanel.setVisible(false);
    this.ordenarPanel.setVisible(false);
    this.playlistsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(biblio.getTodasAsPlaylists()));
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    pesquisarOrdenarPanel = new javax.swing.JPanel();
    pesquisarToggleButton = new javax.swing.JToggleButton();
    ordenarToggleButton = new javax.swing.JToggleButton();
    pesquisarPanel = new javax.swing.JPanel();
    pesquisarTextField = new javax.swing.JTextField();
    pesquisarCriterioComboBox = new javax.swing.JComboBox<>();
    ordenarPanel = new javax.swing.JPanel();
    ordenarCriterioComboBox = new javax.swing.JComboBox<>();
    tabelaMusicasPanel = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tabelaMusicas = new javax.swing.JTable();
    jPanel1 = new javax.swing.JPanel();
    musicasPanel = new javax.swing.JPanel();
    adicionarMusicaButton = new javax.swing.JButton();
    removerMusicaButton = new javax.swing.JButton();
    playlistsPanel = new javax.swing.JPanel();
    playlistsLabel = new javax.swing.JLabel();
    playlistsComboBox = new javax.swing.JComboBox<>();
    adicionarPlaylistButton = new javax.swing.JButton();
    removerPlaylistButton = new javax.swing.JButton();
    botoesPanel = new javax.swing.JPanel();
    StopButton = new javax.swing.JButton();
    musicaAnteriorButton = new javax.swing.JButton();
    playToggleButton = new javax.swing.JToggleButton();
    musicaSeguinteButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    pesquisarToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/search.png"))); // NOI18N
    pesquisarToggleButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    pesquisarToggleButton.setContentAreaFilled(false);
    pesquisarToggleButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pesquisarToggleButtonActionPerformed(evt);
      }
    });

    ordenarToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/sort_down.png"))); // NOI18N
    ordenarToggleButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    ordenarToggleButton.setContentAreaFilled(false);
    ordenarToggleButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        ordenarToggleButtonActionPerformed(evt);
      }
    });

    pesquisarTextField.setText("Digite Aqui");
    pesquisarTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pesquisarTextFieldActionPerformed(evt);
      }
    });

    pesquisarCriterioComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Titulo", "Album", "Genero", "Artista", "Ano" }));

    javax.swing.GroupLayout pesquisarPanelLayout = new javax.swing.GroupLayout(pesquisarPanel);
    pesquisarPanel.setLayout(pesquisarPanelLayout);
    pesquisarPanelLayout.setHorizontalGroup(
      pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pesquisarPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(pesquisarTextField)
          .addComponent(pesquisarCriterioComboBox, 0, 157, Short.MAX_VALUE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    pesquisarPanelLayout.setVerticalGroup(
      pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pesquisarPanelLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(pesquisarCriterioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(pesquisarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    ordenarCriterioComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Titulo", "Album", "Genero", "Artista", "Ano" }));
    ordenarCriterioComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        ordenarCriterioComboBoxActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout ordenarPanelLayout = new javax.swing.GroupLayout(ordenarPanel);
    ordenarPanel.setLayout(ordenarPanelLayout);
    ordenarPanelLayout.setHorizontalGroup(
      ordenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ordenarPanelLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(ordenarCriterioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    ordenarPanelLayout.setVerticalGroup(
      ordenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(ordenarPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(ordenarCriterioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout pesquisarOrdenarPanelLayout = new javax.swing.GroupLayout(pesquisarOrdenarPanel);
    pesquisarOrdenarPanel.setLayout(pesquisarOrdenarPanelLayout);
    pesquisarOrdenarPanelLayout.setHorizontalGroup(
      pesquisarOrdenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pesquisarOrdenarPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(pesquisarToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(pesquisarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(10, 10, 10)
        .addComponent(ordenarToggleButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(ordenarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    pesquisarOrdenarPanelLayout.setVerticalGroup(
      pesquisarOrdenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pesquisarOrdenarPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(pesquisarOrdenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(ordenarToggleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(pesquisarOrdenarPanelLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pesquisarOrdenarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(pesquisarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(pesquisarToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(ordenarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(12, 12, 12))
    );

    tabelaMusicas.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Título", "Álbum", "Gênero", "Artista", "Ano", "Comentário"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    tabelaMusicas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
    tabelaMusicas.setSurrendersFocusOnKeystroke(true);
    jScrollPane1.setViewportView(tabelaMusicas);

    javax.swing.GroupLayout tabelaMusicasPanelLayout = new javax.swing.GroupLayout(tabelaMusicasPanel);
    tabelaMusicasPanel.setLayout(tabelaMusicasPanelLayout);
    tabelaMusicasPanelLayout.setHorizontalGroup(
      tabelaMusicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(tabelaMusicasPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1)
        .addContainerGap())
    );
    tabelaMusicasPanelLayout.setVerticalGroup(
      tabelaMusicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(tabelaMusicasPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        .addContainerGap())
    );

    adicionarMusicaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_list_add.png"))); // NOI18N
    adicionarMusicaButton.setText("Música");
    adicionarMusicaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    adicionarMusicaButton.setContentAreaFilled(false);
    adicionarMusicaButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        adicionarMusicaButtonMouseClicked(evt);
      }
    });

    removerMusicaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_list_remove.png"))); // NOI18N
    removerMusicaButton.setText("Música");
    removerMusicaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    removerMusicaButton.setContentAreaFilled(false);
    removerMusicaButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removerMusicaButtonActionPerformed(evt);
      }
    });

    playlistsLabel.setText("Playlists");

    playlistsComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        playlistsComboBoxActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout playlistsPanelLayout = new javax.swing.GroupLayout(playlistsPanel);
    playlistsPanel.setLayout(playlistsPanelLayout);
    playlistsPanelLayout.setHorizontalGroup(
      playlistsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(playlistsPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(playlistsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(playlistsLabel)
          .addComponent(playlistsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    playlistsPanelLayout.setVerticalGroup(
      playlistsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(playlistsPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(playlistsLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
        .addComponent(playlistsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    adicionarPlaylistButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_list_add.png"))); // NOI18N
    adicionarPlaylistButton.setText("Playlist");
    adicionarPlaylistButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    adicionarPlaylistButton.setContentAreaFilled(false);
    adicionarPlaylistButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        adicionarPlaylistButtonActionPerformed(evt);
      }
    });

    removerPlaylistButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_list_remove.png"))); // NOI18N
    removerPlaylistButton.setText("Playlist");
    removerPlaylistButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    removerPlaylistButton.setContentAreaFilled(false);
    removerPlaylistButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removerPlaylistButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout musicasPanelLayout = new javax.swing.GroupLayout(musicasPanel);
    musicasPanel.setLayout(musicasPanelLayout);
    musicasPanelLayout.setHorizontalGroup(
      musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, musicasPanelLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(playlistsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(adicionarPlaylistButton, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(removerPlaylistButton, javax.swing.GroupLayout.Alignment.TRAILING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(removerMusicaButton)
          .addComponent(adicionarMusicaButton))
        .addContainerGap())
    );
    musicasPanelLayout.setVerticalGroup(
      musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, musicasPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(playlistsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(musicasPanelLayout.createSequentialGroup()
            .addGroup(musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(adicionarMusicaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(adicionarPlaylistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(musicasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(removerMusicaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(removerPlaylistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap())
    );

    StopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_playback_stop.png"))); // NOI18N
    StopButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    StopButton.setContentAreaFilled(false);
    StopButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        StopButtonMouseClicked(evt);
      }
    });

    musicaAnteriorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_skip_backward.png"))); // NOI18N
    musicaAnteriorButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    musicaAnteriorButton.setContentAreaFilled(false);
    musicaAnteriorButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        musicaAnteriorButtonActionPerformed(evt);
      }
    });

    playToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_playback_start.png"))); // NOI18N
    playToggleButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    playToggleButton.setContentAreaFilled(false);
    playToggleButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_playback_pause.png"))); // NOI18N
    playToggleButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_playback_start.png"))); // NOI18N
    playToggleButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_playback_pause.png"))); // NOI18N
    playToggleButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        playToggleButtonMouseClicked(evt);
      }
    });

    musicaSeguinteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/gnome_media_skip_forward.png"))); // NOI18N
    musicaSeguinteButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    musicaSeguinteButton.setContentAreaFilled(false);
    musicaSeguinteButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        musicaSeguinteButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout botoesPanelLayout = new javax.swing.GroupLayout(botoesPanel);
    botoesPanel.setLayout(botoesPanelLayout);
    botoesPanelLayout.setHorizontalGroup(
      botoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(botoesPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(StopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(musicaAnteriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(playToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(musicaSeguinteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    botoesPanelLayout.setVerticalGroup(
      botoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(botoesPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(botoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(StopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(musicaSeguinteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(playToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(musicaAnteriorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addComponent(botoesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(46, 46, 46)
        .addComponent(musicasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(musicasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(botoesPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tabelaMusicasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(pesquisarOrdenarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(tabelaMusicasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(pesquisarOrdenarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void exibePlaylist (ArrayList<Musica> playlist) {
    if (playlist.isEmpty() == false) {
      DefaultTableModel tm = (DefaultTableModel) tabelaMusicas.getModel();
      tm.setRowCount(0);
      playlist.forEach((musica) -> {
      tm.addRow(new Object[]{musica.titulo, 
                             musica.album, 
                             musica.genero, 
                             musica.artista, 
                             musica.ano, 
                             musica.comentario});
      });
    } else {
      System.out.println("Biblioteca em branco");
    }
  }
  
  private void playToggleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playToggleButtonMouseClicked
    if (playToggleButton.isSelected()) {
      if (biblio.getPlaylistAtual().isEmpty() == false) {
        try {
          if (player == null) {
            player = new PlayerPausavel(biblio.getPlaylistAtual());
          } else {
            if (player.getEstadoDoPlayer() == EnumEstado.NAOINICIADO || 
                player.getEstadoDoPlayer() == EnumEstado.TERMINOUDETOCAR ||
                biblio.getPlaylistAlterada() == true) {
              player = new PlayerPausavel(biblio.getPlaylistAtual());
              biblio.setPlaylistAlterada(false);
            }
          }
          player.play();
        }
        catch (DecoderException ex) {
          System.out.println("Erro decoder");
        }
        catch (BitstreamException ex) {
          System.out.println("Erro bitstream");
        }
        catch (JavaLayerException ex) {
          System.out.println("Erro");
        }
      } else {
        System.out.println("biblioteca vazia");
      }
    } else {
      if (playToggleButton.isSelected() == false) {
        player.pause();
      }
    }
  }//GEN-LAST:event_playToggleButtonMouseClicked

  private void adicionarMusicaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adicionarMusicaButtonMouseClicked
    javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
    fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    fc.setMultiSelectionEnabled(true);
    if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
      File[] files = fc.getSelectedFiles();
      for (File file: files) {
        biblio.addMusica(file);
      }
    }
    biblio.setPlaylistAlterada(true);
    exibePlaylist(biblio.getTodasAsMusicas());
  }//GEN-LAST:event_adicionarMusicaButtonMouseClicked

  private void StopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopButtonMouseClicked
    if (player != null) {
      if (player.getEstadoDoPlayer() == EnumEstado.TOCANDO || 
          player.getEstadoDoPlayer() == EnumEstado.PAUSADO) {
        player.stop();
        playToggleButton.setSelected(false);
      }
    }
  }//GEN-LAST:event_StopButtonMouseClicked

  private void pesquisarToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarToggleButtonActionPerformed
    if (pesquisarToggleButton.isSelected()) {
      pesquisarPanel.setVisible(true);
    } else {
      pesquisarPanel.setVisible(false);
    }
  }//GEN-LAST:event_pesquisarToggleButtonActionPerformed

  private void pesquisarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarTextFieldActionPerformed
    playlistTemp = biblio.getPlaylistAtual();
    biblio.setPlaylistAtual(biblio.pesquisarNaBiblioteca(biblio.getTodasAsMusicas(), 
                                                         pesquisarCriterioComboBox.getSelectedItem().toString(), 
                                                         pesquisarTextField.getText()));
    if (biblio.getPlaylistAtual() == null) {
      biblio.setPlaylistAtual(playlistTemp);
    }
    biblio.setPlaylistAlterada(true);
    exibePlaylist(biblio.getPlaylistAtual());
  }//GEN-LAST:event_pesquisarTextFieldActionPerformed

  private void adicionarPlaylistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarPlaylistButtonActionPerformed
    ArrayList<Musica> temp = new ArrayList<>();
    javax.swing.JOptionPane jop = new javax.swing.JOptionPane();
    String nome = (String)JOptionPane.showInputDialog(this, "Digite o nome do arquivo: ",
                                                   "Customized Dialog", JOptionPane.PLAIN_MESSAGE,
                                                   null, null, "");
    if (nome != null && nome.length() > 0) {
      int[] linhas = tabelaMusicas.getSelectedRows();
      if (linhas.length != 0) {
        for (int i = 0; i < linhas.length; i++) {
          for (Musica musica: biblio.getTodasAsMusicas()) {
            if (musica.titulo.equals(tabelaMusicas.getModel().getValueAt(linhas[i], 0).toString())) {
              temp.add(musica);
            }
          }
        }
        biblio.setPlaylistAtual(temp);
        exibePlaylist(biblio.getPlaylistAtual());
        biblio.criarPlaylist(nome, biblio.getPlaylistAtual());
        playlistsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(biblio.getTodasAsPlaylists()));
        biblio.setPlaylistAlterada(true);
      } else {
        System.out.println("Você precisa selecionar as músicas que deseja para a playlist antes de criá-la");
      }
    }
  }//GEN-LAST:event_adicionarPlaylistButtonActionPerformed

  private void removerMusicaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerMusicaButtonActionPerformed
    int[] linhas = tabelaMusicas.getSelectedRows();
    for (int i = 0; i < linhas.length; i++) {
      for (int j = 0; j < biblio.getPlaylistAtual().size(); j++) {
        if (biblio.getPlaylistAtual().get(j).titulo.equals(tabelaMusicas.getModel().getValueAt(linhas[i], 0).toString())) {
          biblio.getPlaylistAtual().remove(j);
        }
      }
    }
    biblio.setPlaylistAlterada(true);
    exibePlaylist(biblio.getPlaylistAtual());
  }//GEN-LAST:event_removerMusicaButtonActionPerformed

  private void removerPlaylistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerPlaylistButtonActionPerformed
    biblio.removerPlaylist(playlistsComboBox.getSelectedItem().toString());
    playlistsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(biblio.getTodasAsPlaylists()));
    playlistsComboBox.setSelectedItem("TodasAsMúsicas");
    biblio.setPlaylistAlterada(true);
  }//GEN-LAST:event_removerPlaylistButtonActionPerformed

  private void musicaAnteriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicaAnteriorButtonActionPerformed
    player.voltarMusica();
  }//GEN-LAST:event_musicaAnteriorButtonActionPerformed

  private void musicaSeguinteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicaSeguinteButtonActionPerformed
    player.proximaMusica();
  }//GEN-LAST:event_musicaSeguinteButtonActionPerformed

  private void ordenarToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarToggleButtonActionPerformed
    if (ordenarToggleButton.isSelected()) {
      ordenarPanel.setVisible(true);
    } else {
      ordenarPanel.setVisible(false);
    }
  }//GEN-LAST:event_ordenarToggleButtonActionPerformed

  private void ordenarCriterioComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarCriterioComboBoxActionPerformed
    biblio.setPlaylistAtual(biblio.ordenarBiblioteca(biblio.getPlaylistAtual(), 
                                                     ordenarCriterioComboBox.getSelectedItem().toString()));
    exibePlaylist(biblio.getPlaylistAtual());
    biblio.setPlaylistAlterada(true);
  }//GEN-LAST:event_ordenarCriterioComboBoxActionPerformed

  private void playlistsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlistsComboBoxActionPerformed
    biblio.setPlaylistAtual(Biblioteca.getPlaylist(playlistsComboBox.getSelectedItem().toString()));
    exibePlaylist(biblio.getPlaylistAtual());
    biblio.setPlaylistAlterada(true);
  }//GEN-LAST:event_playlistsComboBoxActionPerformed
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
      new Interface().setVisible(true);
    });
    
    Runtime.getRuntime().addShutdownHook(new Thread() {
      @Override
      public void run() {
        if (Biblioteca.isEmpty() == false) {
          Biblioteca.salvarBiblioteca();
        }
      }
    });
  }

  private Biblioteca biblio;
  private PlayerPausavel player;
  private ArrayList<Musica> playlistTemp;
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton StopButton;
  private javax.swing.JButton adicionarMusicaButton;
  private javax.swing.JButton adicionarPlaylistButton;
  private javax.swing.JPanel botoesPanel;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton musicaAnteriorButton;
  private javax.swing.JButton musicaSeguinteButton;
  private javax.swing.JPanel musicasPanel;
  private javax.swing.JComboBox<String> ordenarCriterioComboBox;
  private javax.swing.JPanel ordenarPanel;
  private javax.swing.JToggleButton ordenarToggleButton;
  private javax.swing.JComboBox<String> pesquisarCriterioComboBox;
  private javax.swing.JPanel pesquisarOrdenarPanel;
  private javax.swing.JPanel pesquisarPanel;
  private javax.swing.JTextField pesquisarTextField;
  private javax.swing.JToggleButton pesquisarToggleButton;
  private javax.swing.JToggleButton playToggleButton;
  private javax.swing.JComboBox<String> playlistsComboBox;
  private javax.swing.JLabel playlistsLabel;
  private javax.swing.JPanel playlistsPanel;
  private javax.swing.JButton removerMusicaButton;
  private javax.swing.JButton removerPlaylistButton;
  private javax.swing.JTable tabelaMusicas;
  private javax.swing.JPanel tabelaMusicasPanel;
  // End of variables declaration//GEN-END:variables
}
